---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/part-of: {{ .Values.organization }}.{{ .Values.project }}
    app.kubernetes.io/managed-by: kubepak
  name: {{ .Release.Name }}
  namespace: {{ index .Values "packages" "argo-cd" "namespace" }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ .Values.environment }}-{{ .Values.organization }}-{{ .Values.project }}
  source:
    repoURL: https://helm.cilium.io/
    targetRevision: {{ .Values.packages.cilium.chartVersion }}
    chart: cilium
    helm:
      parameters:
        - name: name
          value: "{{ .Release.Name }}"
        {{- if .Values.packages.cilium.image.repository }}
        - name: image.repository
          value: "{{ .Values.packages.cilium.image.repository }}"
        {{- end }}
        {{- if .Values.packages.cilium.image.tag }}
        - name: image.tag
          value: "{{ .Values.packages.cilium.image.tag }}"
        {{- end }}
      values: |
        {{- if not (eq .Values.ciliumAzureResoureGroup "") }}
        aksbyocni:
          enabled: true
        azure:
          resourceGroup: {{ .Values.ciliumAzureResoureGroup }}
        nodeinit:
          enabled: true
        {{- end }}
        cluster:
          id: {{ .Values.packages.cilium.cluster.id }}
          name: {{ .Values.packages.cilium.cluster.name }}
        ipam:
          operator:
            clusterPoolIPv4PodCIDRList: {{ .Values.ciliumIpamOperatorClusterPoolIPv4PodCIDRList }}
            clusterPoolIPv4MaskSize: {{ .Values.packages.cilium.ipam.operator.clusterPoolIPv4MaskSize }}
        k8sServiceHost: {{ .Values.packages.cilium.k8sService.host }}
        k8sServicePort: {{ .Values.packages.cilium.k8sService.port }}
        envoy:
          enabled: true
        envoyConfig:
          enabled: true
        kubeProxyReplacement: true
        loadBalancer:
          l7:
            backend: envoy
        hubble:
          {{- if .Values.packages.cilium.hubble.redact.enabled }}
          redact:
            enabled: true
            http:
              urlQuery: {{ .Values.packages.cilium.hubble.redact.httpUrlQuery }}
              userInfo: {{ .Values.packages.cilium.hubble.redact.httpUserInfo }}
              headers:
                {{- if .Values.packages.cilium.hubble.redact.headers.allow }}
                allow:
                {{- range .Values.packages.cilium.hubble.redact.headers.allow }}
                  - {{ . }}
                {{- end }}
                {{- else }}
                allow: []
                {{- end }}
                {{- if .Values.packages.cilium.hubble.redact.headers.deny }}
                deny:
                {{- range .Values.packages.cilium.hubble.redact.headers.deny }}
                  - {{ . }}
                {{- end }}
                {{- else }}
                deny: []
                {{- end }}
            kafka:
              apiKey: true
          {{- end }}
          peerService:
            clusterDomain: cluster.local.
          tls:
            auto:
              method: helm
          metrics:
            enableOpenMetrics: true
            enabled:
              - dns:query;ignoreAAAA
              - drop:sourceContext=identity;destinationContext=identity
              - tcp
              - flow
              - port-distribution
              - icmp
              - "httpV2:sourceContext=workload-name|pod-name|reserved-identity;destinationContext=workload-name|pod-name|reserved-identity;labelsContext=source_namespace,destination_namespace,traffic_direction"
            dashboards:
              enabled: {{ include "common.context.contains" (merge (dict "value" "prometheus-metrics") .) }}
              labelValue: "grafana"
              annotations:
                grafana_folder: Cilium
            serviceMonitor:
              enabled: {{ include "common.context.contains" (merge (dict "value" "prometheus-metrics") .) }}
              labels:
                release: prometheus-stack
          relay:
            enabled: true
            rollOutPods: true
            prometheus:
              enabled: {{ include "common.context.contains" (merge (dict "value" "prometheus-metrics") .) }}
              serviceMonitor:
                enabled: {{ include "common.context.contains" (merge (dict "value" "prometheus-metrics") .) }}
                labels:
                  release: prometheus-stack
          ui:
            enabled: true
            rollOutPods: true
        prometheus:
          enabled: true
          serviceMonitor:
            enabled: {{ include "common.context.contains" (merge (dict "value" "prometheus-metrics") .) }}
            labels:
              release: prometheus-stack
        dashboards:
          enabled: true
          labelValue: "grafana"
          annotations:
            grafana_folder: Cilium
        operator:
          prometheus:
            serviceMonitor:
              enabled: {{ include "common.context.contains" (merge (dict "value" "prometheus-metrics") .) }}
              labels:
                release: prometheus-stack
          dashboards:
            enabled: true
            labelValue: "grafana"
            annotations:
              grafana_folder: Cilium
        clustermesh:
          useAPIServer: {{ .Values.packages.cilium.clustermesh.useAPIServer }}
          apiserver:
            metrics:
              serviceMonitor:
                enabled: {{ include "common.context.contains" (merge (dict "value" "prometheus-metrics") .) }}
                labels:
                  release: prometheus-stack
            service:
              type: LoadBalancer
              annotations:
                service.beta.kubernetes.io/azure-load-balancer-internal: "true"
            tls:
              auto:
                enabled: true
                method: helm
          config:
            enabled: true
            clusters:
            - name: benciliumfive
              port: 2379
              ips:
                - 192.168.30.7
{{/*        tls:*/}}
{{/*          ca:*/}}
{{/*            cert: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUlQRklmNVJEZlRSNnVDL2MzQThiREV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkwTURreU1ERTBNemMxTUZvWERUSTNNRGt5TURFMApNemMxTUZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0VVNHalhCV2RSZVo0bVllUTVXOUZXV1Z4M1FpN2xweE1nWGEzK1p5RDZFa0Z4RHcKSnoyZ09Jb0dURG1wR0FZelozSSt4TEJaYWxQMmFNckRQZEE5VzJBb0dQNmxjNWs2MXc1V2pUbWIyVzArN3BMeQpIVHBmUkk2NWJ2aWdmY3A4WHcycW9MQ0pub3RrbUFGMklzRkF3MnRNRVo5aHJXRHVnU25FQlJGQlRVRDRVK3F1ClVkT05WeGJGbTFleTBjRzRPYkhGbHJ1NHJZMGJkUFlXUDhZVDlzNTBNd0tlOUhkQzVFNVBMemVEVEhzU1grYXYKTUdlTFo1RUpsL1hOZ3JVdWJRNTJoZGxLdHdiV2lkU1h1NFo1akY0bXkremFkRXpZOXRBWUUxUkc5emM2SUJmeQo4aTU2QmFkUjVBUk5ZNUJiVGZHOTU3eWEzak9Hb1loQzBmZi9jd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSzZ4ekRlc3hjc0hWaUExNXZINnFEUnM2VThSTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQU9pcUdxYWdMaEo3SUFiRHVuZ0w5MmFkelArdmZJeUx3ZkpqcGJnbTY2eEdtbnIzWW9VUjNVCmpsSTJqWjUwaU9HcUtmUWZoUWFoUDNrZk1mUDBucDdZVUg2Z2ZRdWNkVXNpejRtYmRwTW5vcDNLUTJhWXdEaEoKaUt1dUg0bHU3S1FQaE1adEg4OU93eDhYV05MWlV6TmE3SzIzOVE5dEZmMllLQjQzTzBPZ3oxdElwVjdwRFhqYQpUY2oyYjVOTGJxMHRma1BOU1VSd1ltUEJ3NUpFQ1BHRXJhbGtBYThQOHc4OHYrYWxnaXBONU91VXgwUmM2UEFtCnpmKzZxbVVVaElwbmw1U1Uyc3FMb3FvVEMvZ3pQNWVlaVZOb1J4TzZ3cUFqZklKanNMeTJlRXFjWjZOT0NtWlgKb1MyV1h1UFFpZkoySDdrdktZbXBKaHVkT1UxVDlXWWEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="*/}}
{{/*            key: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdFVTR2pYQldkUmVaNG1ZZVE1VzlGV1dWeDNRaTdscHhNZ1hhMytaeUQ2RWtGeER3Ckp6MmdPSW9HVERtcEdBWXpaM0kreExCWmFsUDJhTXJEUGRBOVcyQW9HUDZsYzVrNjF3NVdqVG1iMlcwKzdwTHkKSFRwZlJJNjVidmlnZmNwOFh3MnFvTENKbm90a21BRjJJc0ZBdzJ0TUVaOWhyV0R1Z1NuRUJSRkJUVUQ0VStxdQpVZE9OVnhiRm0xZXkwY0c0T2JIRmxydTRyWTBiZFBZV1A4WVQ5czUwTXdLZTlIZEM1RTVQTHplRFRIc1NYK2F2Ck1HZUxaNUVKbC9YTmdyVXViUTUyaGRsS3R3YldpZFNYdTRaNWpGNG15K3phZEV6WTl0QVlFMVJHOXpjNklCZnkKOGk1NkJhZFI1QVJOWTVCYlRmRzk1N3lhM2pPR29ZaEMwZmYvY3dJREFRQUJBb0lCQVFDcVVyVkxlVjhEcnlWOQpRZzcxMm1GTkZhTGpReEQvZmlRV3FNRzgyTUFjUjRHdDJ0Q05UcTZaOGJkeE1FemVzaFRqQXNwUDdwUldBSWJzCmVIbDBQNU1ucFBhSVpkMzQvT1g0NVJRV3B5YjE2bHpUdDJlZ1p4VFZTbmFhK3l0eWh5ek44LzE3OStXWC84cUoKdWZYVE9sc3NSRW01MVZUbW9NbjZ1OC9nSXhLRkR3MEw0QjRkR3crRDBhM1IzTWFGTld0bUk3a2k1OE5EY2tJRwpuM1VNVkZHSDQwNTlnZDlvRWhQVi8yQTBWMTFlZ3oyb2hNdXBXbnhlUFN6K0dOTHFOVng5RjhzRkZrdUEvL1p2CjJhODFrZXhmaFRPTmtYV3VaZ21lcFd3V2ZTdkhUajROTGwrc3IzTnc1Q3B1SGE2VDEzWnJEMGJBbnB4WUw4eVYKeHJhRHdQWEJBb0dCQU1Zellzaktsc1pLZytMVGs1NFM3NVRrQ2s4ZzBYZDN1TnpTZkRKODFsSnF4NnhFbG9lMgo2L2x3NVlXZU5WbTEvV1liVmZIcmY2bHFSbERUS2tFM1NjY0dvTE1xNmN6am5Tc2NtMWZiYVB3ZzRoZFVkWWpWCldVM0l0ZUtkOWpveXhSampwcXBRbEhaVDJDN0lSZ1kySXRrTnNEcDdWTXQweTBNU244dkxId3VKQW9HQkFPb2gKQWh3ZGpvRmhFNFR0NzFCemVlTDNaK2thNXV1Q1ErYVpLR2o1dVFHaUorbUk0cXF5UVZzVHRzaW5MU2hJY3hSbAo4aDNmbUNoQ2RnODl5NDk1aDYyaFBscWZuNTc4amZqNzZpWjhoVS9aM0NEeTJPN1FOUHBTOEdqS3Q3Z3N2KzRqClpkYnRkem44Y05KUStMVnJmcGdCOE5zMUN1cjRldzBiN0VuUnlZZ2JBb0dCQUtwQTZkSmhkRExSUDRsUkJiVDcKdnlHKzRid25ETWY2NTZtSWhYYzVGVUdteCs2SzNHT29GZnducG9HbzdWc3FvWWxjWWU5MXhDdmJScHVYU096TQplV3VsbmRWS1A1dm95ZEdHdVVvM0IyL05MMm1xKzJ1WEdTZGdDaDJvWXlLTENoUGZPZ09EUklTQWNXdCtUZWg0CkNHYzdBdTY1a3BWU3RtZmZUN1RYdnN0QkFvR0JBSUptL0J2WXdvU0JJelFJcWlBdkVSWS9JbHNOSnN6SmN6USsKM2VrS0hlY3cvL1hzemdLdzRnSHVTd0liU3VXQzVNWFp1aTYxV0xRandFbmc2ejN3UEllU3BYNG9KZW1SVlNuMgpkWVlXR05KT3ozSnlrQzBEUGw2bVQweXVqQUZDdTJ2UnYya2tQaUhIM3JibGJvRHRiRWNSM2FyYU1raUpPVkFsCjIwZUtWeXM5QW9HQWZrMGduOTh1b2dKemtyOXd1TmJTQXVnQy9xVkNlMDNsNDc5RXZGVWZtK3BXanVGZHE5QlEKcUVEQlZZYkFISW9ySURjNm1KTEhCWnNDeE5GTXNVVzRuY0t2Q20zWGJ5UThtT0tnWDBqdjYvV0NPUXhzbjV4YgpGRVF2TnRNbHc5bDIxUVZoUENXSmdhbk5rMWd1Q2tOUlhYV2pmUXg4TmFiTlBxNjBzTXROWHl3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="*/}}
  ignoreDifferences:
    - group: ""
      kind: ConfigMap
      name: hubble-ca-cert
      jsonPointers:
        - /data/ca.crt
    - group: ""
      kind: Secret
      name: hubble-relay-client-certs
      jsonPointers:
        - /data/ca.crt
        - /data/tls.crt
        - /data/tls.key
    - group: ""
      kind: Secret
      name: hubble-server-certs
      jsonPointers:
        - /data/ca.crt
        - /data/tls.crt
        - /data/tls.key
  destination:
    server: {{ .Values.kubernetes.server }}
    namespace: {{ .Release.Namespace }}
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
...
